<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mybatis.mapper.s_student_homeworkMapper" >
  <resultMap id="BaseResultMap" type="com.example.mybatis.entity.s_student_homework" >
    <id column="shId" property="shid" jdbcType="BIGINT" />
    <result column="studentId" property="studentid" jdbcType="BIGINT" />
    <result column="homeworkTitle" property="homeworktitle" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.mybatis.entity.s_student_homework" extends="BaseResultMap" >
    <result column="homeworkContent" property="homeworkcontent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    shId, studentId, homeworkTitle, create_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    homeworkContent
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.example.mybatis.entity.s_student_homeworkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_student_homework
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.mybatis.entity.s_student_homeworkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_student_homework
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_student_homework
    where shId = #{shid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from s_student_homework
    where shId = #{shid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.mybatis.entity.s_student_homeworkExample" >
    delete from s_student_homework
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.mybatis.entity.s_student_homework" >
    insert into s_student_homework (shId, studentId, homeworkTitle, 
      create_time, update_time, homeworkContent
      )
    values (#{shid,jdbcType=BIGINT}, #{studentid,jdbcType=BIGINT}, #{homeworktitle,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{homeworkcontent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.mybatis.entity.s_student_homework" >
    insert into s_student_homework
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shid != null" >
        shId,
      </if>
      <if test="studentid != null" >
        studentId,
      </if>
      <if test="homeworktitle != null" >
        homeworkTitle,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="homeworkcontent != null" >
        homeworkContent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shid != null" >
        #{shid,jdbcType=BIGINT},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=BIGINT},
      </if>
      <if test="homeworktitle != null" >
        #{homeworktitle,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="homeworkcontent != null" >
        #{homeworkcontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.mybatis.entity.s_student_homeworkExample" resultType="java.lang.Integer" >
    select count(*) from s_student_homework
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update s_student_homework
    <set >
      <if test="record.shid != null" >
        shId = #{record.shid,jdbcType=BIGINT},
      </if>
      <if test="record.studentid != null" >
        studentId = #{record.studentid,jdbcType=BIGINT},
      </if>
      <if test="record.homeworktitle != null" >
        homeworkTitle = #{record.homeworktitle,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.homeworkcontent != null" >
        homeworkContent = #{record.homeworkcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update s_student_homework
    set shId = #{record.shid,jdbcType=BIGINT},
      studentId = #{record.studentid,jdbcType=BIGINT},
      homeworkTitle = #{record.homeworktitle,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      homeworkContent = #{record.homeworkcontent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update s_student_homework
    set shId = #{record.shid,jdbcType=BIGINT},
      studentId = #{record.studentid,jdbcType=BIGINT},
      homeworkTitle = #{record.homeworktitle,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.mybatis.entity.s_student_homework" >
    update s_student_homework
    <set >
      <if test="studentid != null" >
        studentId = #{studentid,jdbcType=BIGINT},
      </if>
      <if test="homeworktitle != null" >
        homeworkTitle = #{homeworktitle,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="homeworkcontent != null" >
        homeworkContent = #{homeworkcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where shId = #{shid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.mybatis.entity.s_student_homework" >
    update s_student_homework
    set studentId = #{studentid,jdbcType=BIGINT},
      homeworkTitle = #{homeworktitle,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      homeworkContent = #{homeworkcontent,jdbcType=LONGVARCHAR}
    where shId = #{shid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.mybatis.entity.s_student_homework" >
    update s_student_homework
    set studentId = #{studentid,jdbcType=BIGINT},
      homeworkTitle = #{homeworktitle,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where shId = #{shid,jdbcType=BIGINT}
  </update>
</mapper>